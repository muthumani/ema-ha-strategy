ema_ha_strategy/
├── .github/               # GitHub configuration
│   ├── ISSUE_TEMPLATE/     # Issue templates
│   │   ├── bug_report.md  # Bug report template
│   │   └── feature_request.md # Feature request template
│   ├── workflows/         # GitHub Actions workflows
│   │   └── ci.yml         # CI workflow
│   └── PULL_REQUEST_TEMPLATE.md # Pull request template
│
├── acceptance_testing/    # Acceptance testing framework
│   ├── docs/              # Acceptance testing documentation
│   ├── reports/           # Acceptance test reports
│   ├── scripts/           # Acceptance test scripts
│   │   ├── acceptance_test.bat    # Windows batch file for acceptance tests
│   │   ├── generate_test_data.py  # Generate synthetic test data
│   │   ├── monitor_performance.py # Monitor system performance
│   │   ├── run_acceptance_tests.py # Run acceptance tests
│   │   ├── smoke_test.bat         # Quick smoke test
│   │   └── __init__.py            # Package initialization
│   ├── __init__.py        # Package initialization
│   ├── main.py            # Main entry point for acceptance testing
│   └── README.md          # Acceptance testing documentation
│
├── backtest/              # Backtesting framework
│   ├── cross_validate.py  # Cross-validation implementation
│   ├── deterministic.py   # Deterministic backtesting
│   ├── parallel.py        # Parallel backtesting
│   ├── quick_validate.py  # Quick validation
│   ├── run.py             # Backtest runner
│   ├── runner.py          # Backtest runner implementation
│   ├── utils.py           # Backtesting utilities
│   ├── validate.py        # Validation utilities
│   └── __init__.py        # Package initialization
│
├── config/                # Configuration files
│   └── config.yaml        # Default configuration
│
├── data/                  # Data directory
│   ├── market_data/       # Market data files
│   ├── reports/           # Excel reports
│   ├── results/           # Backtest results
│   ├── test_results/      # Test results
│   └── validation/        # Validation results
│
├── designdiagram/         # Design diagrams
│   ├── 01_system_architecture.md    # System architecture diagram
│   ├── 02_component_diagram.md      # Component diagram
│   ├── 03_system_design.md          # System design diagram
│   ├── 04_test_architecture.md      # Test architecture diagram
│   ├── 05_acceptance_testing_workflow.md  # Acceptance testing workflow
│   ├── 06_deployment_architecture.md # Deployment architecture
│   ├── 07_data_flow.md              # Data flow diagram
│   ├── 08_class_diagram.md          # Class diagram
│   └── README.md                    # Design diagrams documentation
│
├── docs/                  # Documentation
│   ├── api/               # API documentation
│   ├── development/       # Development guide
│   ├── user_guide/        # User guide
│   ├── ACCEPTANCE_TESTING_SUMMARY.md # Acceptance testing summary
│   ├── README.md          # Documentation overview
│   ├── running_combinations.md      # Guide for running combinations
│   └── usage_guide.md     # Usage guide
│
├── logs/                  # Log files
│
├── patterns/              # Pattern recognition
│   ├── patterns.py        # Pattern recognition implementation
│   └── __init__.py        # Package initialization
│
├── server/                # Server components
│   ├── health_check.py    # Health check server
│   └── __init__.py        # Package initialization
│
├── strategies/            # Trading strategies
│   ├── ema_ha.py          # EMA Heikin Ashi strategy
│   └── __init__.py        # Package initialization
│
├── tests/                 # Test suite
│   ├── integration/       # Integration tests
│   ├── unit/              # Unit tests
│   ├── fixtures.py        # Test fixtures
│   ├── test_backtest_utils.py    # Tests for backtest utilities
│   ├── test_config_validator.py  # Tests for config validation
│   ├── test_cross_validate.py    # Tests for cross-validation
│   ├── test_deterministic.py     # Tests for deterministic backtest
│   ├── test_ema_ha.py            # Tests for EMA-HA
│   ├── test_ema_ha_strategy.py   # Tests for EMA-HA strategy
│   ├── test_excel_report.py      # Tests for Excel reports
│   ├── test_integration.py       # Integration tests
│   ├── test_main.py              # Tests for main module
│   ├── test_parallel.py          # Tests for parallel execution
│   ├── test_patterns.py          # Tests for patterns
│   ├── test_patterns_functions.py # Tests for pattern functions
│   ├── test_quick_validate.py    # Tests for quick validation
│   ├── test_run.py               # Tests for run module
│   ├── test_runner.py            # Tests for runner module
│   ├── test_utils.py             # Tests for utilities
│   ├── test_validate.py          # Tests for validation
│   └── __init__.py               # Package initialization
│
├── utils/                 # Utility modules
│   ├── config_utils.py    # Configuration utilities
│   ├── config_validator.py # Configuration validation
│   ├── constants.py       # Constants definition
│   ├── excel_report.py    # Excel report generation
│   ├── logger.py          # Logging configuration
│   ├── version.py         # Version information
│   └── __init__.py        # Package initialization
│
├── main.py                # Main entry point
├── setup.py               # Package setup script
├── version.py             # Version information
├── __init__.py            # Package initialization
├── project_structure.txt  # Project structure documentation
├── pytest.ini             # PyTest configuration
├── LICENSE                # License file
├── CONTRIBUTING.md        # Contribution guidelines
├── CHANGELOG.md           # Changelog
├── run.bat                # Windows batch file to run the strategy
├── setup.bat              # Windows batch file to set up the environment
└── README.md              # Project documentation